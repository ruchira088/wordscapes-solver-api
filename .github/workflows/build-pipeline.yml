name: build-pipeline

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          path: |
            ~/.m2/repository
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Execute test suite
        run: ./mvnw test

      - name: Send failure Slack message
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :x: *FAILURE*
            *Job:* compile-and-test
            *${{ github.repository }}*
            *Branch:* ${{ github.ref }}
            *Commit:* `${{ github.sha }}`
            *Last Commit Message:* ${{ github.event.head_commit.message }}
            *URL:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  publish-docker-image:
    runs-on: ubuntu-latest
    needs:
      - compile-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          path: |
            ~/.m2/repository
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            ${{ runner.os }}-maven-

      - name: Build and publish Docker image
        run: ansible-playbook playbooks/build-and-publish-docker-image.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Send failure Slack message
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :x: *FAILURE*
            *Job:* publish-docker-image
            *${{ github.repository }}*
            *Branch:* ${{ github.ref }}
            *Commit:* `${{ github.sha }}`
            *Last Commit Message:* ${{ github.event.head_commit.message }}
            *URL:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy-to-k8s:
    runs-on: ubuntu-latest
    needs:
      - publish-docker-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to K8s server
        run: ansible-playbook -vvv playbooks/k8s-deploy.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Send failure Slack message
        if: failure()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :x: *FAILURE*
            *${{ github.repository }}*
            *Job:* deploy-to-k8s
            *Branch:* ${{ github.ref }}
            *Commit:* `${{ github.sha }}`
            *Last Commit Message:* ${{ github.event.head_commit.message }}
            *URL:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send successful Slack message
        uses: slackapi/slack-github-action@v1.25.0
        with:
          channel-id: C02HYP398KS
          slack-message: |
            :white_check_mark: *SUCCESS*
            *${{ github.repository }}*
            *Branch:* ${{ github.ref }}
            *Commit:* `${{ github.sha }}`
            *Last Commit Message:* ${{ github.event.head_commit.message }}
            *URL:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
